/ocr-vue-app/
├── .github/                       # GitHub相关配置
├── config/                        # 集中管理的配置文件
│   ├── .env.common                # 所有环境共享的基础配置
│   ├── .env.development           # 开发环境配置
│   ├── .env.production            # 生产环境配置
│   ├── .env.test                  # 测试环境配置
│   ├── nginx/                     # Nginx配置（从根目录移动过来）
│   │   ├── nginx.conf
│   │   └── templates/
│   ├── ssl/                       # SSL证书（从根目录移动过来）
│   └── services/                  # 按服务划分的特定配置
│       ├── backend.env.example
│       ├── frontend.env.example
│       └── python-service.env.example
├── scripts/                       # 脚本文件集中管理
│   ├── deploy/                    # 部署相关脚本
│   ├── dev/                       # 开发辅助脚本
│   ├── ocr-app.sh                 # 主应用脚本
│   └── watchdog.sh                # 监控脚本
├── docs/                          # 文档集中管理
│   ├── api/                       # API文档
│   ├── user-guide/                # 用户指南
│   │   └── ocr-app-使用指南.md
│   ├── dev-guide/                 # 开发者指南
│   └── migration/                 # 迁移文档
│       └── 环境迁移文档.md
├── services/                      # 所有服务统一放在services目录下
│   ├── backend/                   # 后端服务
│   │   ├── controllers/
│   │   ├── middleware/
│   │   ├── models/
│   │   ├── routes/
│   │   ├── services/
│   │   ├── utils/
│   │   ├── server.js
│   │   └── package.json
│   ├── frontend/                  # 前端服务
│   │   ├── public/
│   │   ├── src/
│   │   │   ├── assets/
│   │   │   ├── components/
│   │   │   │   ├── common/        # 通用组件
│   │   │   │   ├── layout/        # 布局组件
│   │   │   │   ├── features/      # 功能组件，按功能模块组织
│   │   │   │   └── auth/          # 认证相关组件
│   │   │   ├── views/
│   │   │   ├── router/
│   │   │   ├── stores/
│   │   │   ├── services/
│   │   │   └── utils/
│   │   ├── package.json
│   │   └── vite.config.js
│   └── python-service/            # Python服务
│       ├── api/
│       ├── services/
│       ├── utils/
│       ├── models/                # 新增，用于存放数据模型
│       ├── doclayout_yolo/
│       ├── train/
│       ├── main.py
│       └── requirements.txt
├── data/                          # 数据存储目录
│   ├── database/                  # 数据库相关
│   │   ├── mongodb/
│   │   └── migrations/            # 数据库迁移脚本
│   ├── uploads/                   # 上传文件存储
│   ├── models/                    # 模型文件存储
│   └── backups/                   # 备份文件
├── logs/                          # 统一的日志目录
│   ├── backend/
│   ├── frontend/
│   └── python-service/
├── tools/                         # 工具和实用程序
│   ├── dev-tools/                 # 开发工具
│   ├── monitoring/                # 监控工具
│   └── migration/                 # 迁移工具
├── tests/                         # 测试目录
│   ├── backend/
│   ├── frontend/
│   └── python-service/
├── .gitignore
├── .editorconfig
├── README.md
└── docker-compose.yml            # 如果使用Docker，添加容器编排文件



优化说明
配置集中化：
创建 config 目录集中管理所有配置文件
将分散在各服务中的环境变量文件统一管理
将 nginx 和 ssl 目录移到 config 下，使配置更集中
服务统一管理：
创建 services 目录，将所有服务（backend、frontend、python-service）统一放在这个目录下
每个服务内部保持其原有的结构，但可以进一步优化
数据管理优化：
创建 data 目录，统一管理所有数据相关内容
包括数据库、上传文件、模型文件和备份
文档集中化：
创建 docs 目录，集中管理所有文档
按照文档类型（API文档、用户指南、开发者指南等）组织
脚本集中管理：
创建 scripts 目录，集中管理所有脚本文件
按照脚本用途（部署、开发、监控等）组织
日志统一管理：
保留 logs 目录，但在其中按服务划分子目录
测试目录：
添加 tests 目录，集中管理所有测试代码
按服务划分子目录
前端结构优化：
在 components 目录下按功能和用途划分组件
将通用组件、布局组件和功能组件分开管理
Python服务优化：
添加 models 目录，用于存放数据模型
更清晰地划分API、服务和工具
工具集中管理：
保留 tools 目录，但按工具用途进行更细致的划分
这种结构的主要优势在于：

逻辑清晰：按功能和服务类型明确划分目录
集中管理：配置、脚本、文档等集中管理，便于维护
减少冗余：避免在不同服务中重复相似的目录结构
扩展性好：可以轻松添加新的服务或功能模块
标准化：遵循行业最佳实践，使新开发人员更容易理解项目结构
这个结构适合多服务、多环境的OCR应用，能够更好地支持团队协作和项目长期维护。

# 前端结构优化

frontend/src/components/
├── common/                  # 通用UI组件
│   ├── TheHeader.vue
│   ├── TheFooter.vue
│   ├── NotificationBar.vue
│   ├── LoadingOverlay.vue
│   ├── ThemeToggle.vue
│   ├── LanguageToggle.vue
│   └── Tutorial.vue
│
├── auth/                    # 认证相关组件
│   ├── LoginForm.vue
│   ├── RegisterForm.vue
│   └── UserProfile.vue
│
├── ocr/                     # OCR核心功能组件
│   ├── FileUpload.vue
│   ├── ActionControls.vue
│   ├── ImageCanvas.vue
│   ├── PdfControls.vue
│   └── MaskingTool.vue
│
├── text-output/             # 文本输出相关组件
│   ├── TextOutputManager.vue
│   ├── TextHorizontalParagraph.vue
│   ├── TextHorizontalParallel.vue
│   ├── TextVerticalParagraph.vue
│   ├── TextVerticalParallel.vue
│   ├── TextTable.vue
│   └── TextTablePlanB.vue
│
├── coordinate/              # 坐标和图像处理相关组件
│   ├── CoordinateView.vue
│   ├── GridAlignmentTool.vue
│   ├── FilterControls.vue
│   └── ImageCoordinateTool.vue
│
├── ui/                      # 基础UI组件
│   ├── RangeSlider.vue
│   └── SystemStatus.vue
└── 


# 前端view优化

frontend/src/views/
├── home/      
│   ├── MainOcrApp.vue           # 核心应用逻辑              
│   └── HomePage.vue            # 主页相关
│
├── auth/                    # 认证页面
│   ├── LoginPage.vue
│   └── RegisterPage.vue
│
├── admin/                   # 管理页面
│   └── AdminDashboard.vue
│
└── tools/                   # 工具页面
    └── DocDetectionPage.vue  # 重命名ImageCoordinateTool为页面组件


