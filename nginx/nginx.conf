#user nginx;  # 在Mac开发环境中不需要指定用户
user patrick staff;  # 使用patrick用户运行Nginx
worker_processes 1;
#error_log /var/log/nginx/error.log warn;  # 使用相对路径
error_log logs/error.log;
#pid /var/run/nginx.pid;  # 使用相对路径
pid logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # 设置客户端请求体大小限制为25MB
    client_max_body_size 25M;

    # 直接定义常用的MIME类型
    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml;
        application/javascript                js mjs;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        image/png                             png;
        image/svg+xml                         svg svgz;
        image/webp                            webp;
        application/json                      json;
        application/pdf                       pdf;
        application/zip                       zip;
        audio/mpeg                            mp3;
        video/mp4                             mp4;
        video/webm                            webm;
    }

    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log /var/log/nginx/access.log main;  # 使用相对路径
    access_log logs/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # GZIP 配置
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # HTTP服务器配置 - 强制重定向到HTTPS
    server {
        listen 8080 default_server;  # 使用8080端口，设为默认服务器
        listen [::]:8080 default_server;
        server_name _;  # 匹配所有主机名

        # 安全头部
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # 将所有HTTP请求重定向到HTTPS
        return 301 https://$host:8443$request_uri;

        # 日志配置
        access_log logs/http_access.log main;
        error_log logs/http_error.log;
    }

    # HTTPS 服务器配置 (可选，开发环境可能不需要)
    server {
        listen 8443 ssl;  # 使用8443端口避免权限问题
        server_name localhost;

        # SSL 证书配置 - 使用绝对路径
        ssl_certificate /Users/patrick/Documents/应用开发/ocr-vue-app/ssl/localhost+2.pem;
        ssl_certificate_key /Users/patrick/Documents/应用开发/ocr-vue-app/ssl/localhost+2-key.pem;

        # 更宽容的SSL配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # 开发环境SSL优化
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_verify_client off;

        # 增加HTTPS安全配置
        ssl_buffer_size 8k;
        ssl_ecdh_curve secp384r1;
        ssl_stapling off;  # 开发环境可以关闭OCSP stapling

        # 暂时禁用所有安全头信息以便调试
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        # add_header X-Content-Type-Options nosniff always;
        # add_header X-Frame-Options SAMEORIGIN always;
        # add_header X-XSS-Protection "1; mode=block" always;
        # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://vision.googleapis.com https://storage.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: blob:; connect-src 'self' https://vision.googleapis.com; font-src 'self' https://fonts.gstatic.com; object-src 'none'; media-src 'self'; frame-src 'self'; worker-src 'self' blob:; form-action 'self'; base-uri 'self'; frame-ancestors 'self'" always;
        # add_header Referrer-Policy strict-origin-when-cross-origin always;
        # add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;

        # 静态文件服务 - 支持SPA路由
        location / {
            root /Users/patrick/Documents/应用开发/ocr-vue-app/frontend/dist;
            index index.html;
            try_files $uri $uri/ /index.html;  # 关键配置：支持HTML5 History模式路由
        }

        # PDF.js静态文件服务
        location /pdf.js/ {
            alias /Users/patrick/Documents/应用开发/ocr-vue-app/frontend/public/pdf.js/;
            add_header Cache-Control "public, max-age=3600";
        }

        # 后端 API
        location /api/ {
            proxy_pass http://localhost:3000;  # 本地后端服务地址
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;

            # 安全设置
            proxy_cookie_path / "/; HttpOnly; Secure; SameSite=strict";
            proxy_cookie_flags ~ "HttpOnly; Secure; SameSite=strict";

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Python服务代理
        location /api/python/ {
            proxy_pass http://localhost:5000/;  # Python服务地址 - 改回5000端口，直接代理到根路径
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;

            # 安全设置
            proxy_cookie_path / "/; HttpOnly; Secure; SameSite=strict";
            proxy_cookie_flags ~ "HttpOnly; Secure; SameSite=strict";

            # 增加超时设置，因为Python服务可能需要更长的处理时间
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # 限制上传文件大小
            client_max_body_size 25M;
        }

        # Python服务上传文件访问 - 直接路径
        location /api/python/uploads/ {
            proxy_pass http://localhost:5000/uploads/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            # 增加超时设置，因为可能需要处理大文件
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Python服务通过ID访问上传文件 - 新增路由
        location /api/python/uploads/by-id/ {
            proxy_pass http://localhost:5000/uploads/by-id/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            # 增加超时设置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # 图片代理服务 - 新增路由
        location /api/python/images/ {
            proxy_pass http://localhost:5000/images/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            # 增加超时设置
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            # 增加缓存设置
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
        }

        # Python服务结果文件访问 - 直接路径
        location /api/python/results/ {
            proxy_pass http://localhost:5000/results/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Python服务健康检查端点
        location /api/python/health {
            proxy_pass http://localhost:5000/health;  # 改回5000端口，直接访问/health
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 健康检查使用较短的超时
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
    }
}